/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import newScene.Scene;

/**
 *
 * @author sophie
 */
public class NewScene extends javax.swing.JFrame {

    /**
     * Creates new form NewScene
     */
    public NewScene() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        planeCheckbox = new javax.swing.JCheckBox();
        sphereCheckbox = new javax.swing.JCheckBox();
        boxCheckbox = new javax.swing.JCheckBox();
        triangleCheckbox = new javax.swing.JCheckBox();
        pointlightCheckbox = new javax.swing.JCheckBox();
        spotlightCheckbox = new javax.swing.JCheckBox();
        directionalLightCheckbox = new javax.swing.JCheckBox();
        sphereColor = new javax.swing.JComboBox();
        planeColor = new javax.swing.JComboBox();
        boxColor = new javax.swing.JComboBox();
        triangleColor = new javax.swing.JComboBox();
        cameraChooser = new javax.swing.JComboBox();
        materialChooser = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("make new Scene");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        planeCheckbox.setText("Plane");

        sphereCheckbox.setText("Sphere");

        boxCheckbox.setText("Box");
        boxCheckbox.setActionCommand("Box");

        triangleCheckbox.setText("Triangle");

        pointlightCheckbox.setText("Pointlight");

        spotlightCheckbox.setText("Spotlight");

        directionalLightCheckbox.setText("directional Light");

        sphereColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "red", "blue", "yellow", "green" }));

        planeColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "green", "red", "blue", "yellow", "darkgrey" }));

        boxColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "blue", "red", "yellow", "green" }));

        triangleColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "yellow", "red", "blue", "green" }));

        cameraChooser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "perspective Camera", "orthographic Camera" }));

        materialChooser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Lambert", "Phong", "BlinnPhong", "Reflective" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(planeCheckbox)
                            .addComponent(planeColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sphereColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sphereCheckbox))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(boxCheckbox)
                            .addComponent(boxColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(triangleCheckbox)
                            .addComponent(triangleColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pointlightCheckbox)
                                .addGap(18, 18, 18)
                                .addComponent(spotlightCheckbox)
                                .addGap(18, 18, 18)
                                .addComponent(directionalLightCheckbox))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(materialChooser, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cameraChooser, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planeCheckbox)
                    .addComponent(sphereCheckbox)
                    .addComponent(boxCheckbox)
                    .addComponent(triangleCheckbox))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sphereColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planeColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(triangleColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(directionalLightCheckbox)
                    .addComponent(spotlightCheckbox)
                    .addComponent(pointlightCheckbox))
                .addGap(13, 13, 13)
                .addComponent(materialChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cameraChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Scene scene = new Scene();
        
        if(planeCheckbox.isSelected()){
           scene.createPlane(scene.stringToColor((String) planeColor.getSelectedItem()), materialChooser.getSelectedIndex());
        }
        System.out.println(materialChooser.getSelectedIndex());
        
        if(sphereCheckbox.isSelected()){
           scene.createSphere(scene.stringToColor((String) sphereColor.getSelectedItem()) , materialChooser.getSelectedIndex());
        }
        if(boxCheckbox.isSelected()){
            scene.createBox(scene.stringToColor((String) boxColor.getSelectedItem()), materialChooser.getSelectedIndex());
        }
        if(triangleCheckbox.isSelected()){
            scene.createTriangle(scene.stringToColor((String) triangleColor.getSelectedItem()), materialChooser.getSelectedIndex());
        }
        
        if(spotlightCheckbox.isSelected()){
            scene.spotlight();
        }
        if(pointlightCheckbox.isSelected()){
            scene.pointlight();
        }
        if(directionalLightCheckbox.isSelected()){
            scene.directionalLight();
        }
        scene.setCam((String) cameraChooser.getSelectedItem());
        scene.drawScene();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewScene.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewScene.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewScene.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewScene.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewScene().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox boxCheckbox;
    private javax.swing.JComboBox boxColor;
    private javax.swing.JComboBox cameraChooser;
    private javax.swing.JCheckBox directionalLightCheckbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox materialChooser;
    private javax.swing.JCheckBox planeCheckbox;
    private javax.swing.JComboBox planeColor;
    private javax.swing.JCheckBox pointlightCheckbox;
    private javax.swing.JCheckBox sphereCheckbox;
    private javax.swing.JComboBox sphereColor;
    private javax.swing.JCheckBox spotlightCheckbox;
    private javax.swing.JCheckBox triangleCheckbox;
    private javax.swing.JComboBox triangleColor;
    // End of variables declaration//GEN-END:variables
}
